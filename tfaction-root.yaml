# ファイル名は"yaml"である必要がある
plan_workflow_name: Terraform plan
label_prefixes:
  # tfmigrate用のラベルを付けると自動的にterraform plan/applyから、tfmigrate plan/applyに変更される(専用workflowは不要。手動実行はscaffoldを使用)
  tfmigrate: "migrate:" # e.g. migrate:dev
  skip: "skip:"  # e.g. skip:dev

drift_detection:
  minimum_detection_interval: 120 # 120 hours (5 days)
  num_of_issues: 3 # 3 working directories are checked per workflow run. By default 1 working directory is checked.

tflint:
  enabled: true
  fix: true
trivy:
  enabled: true

aqua:
  update_checksum:
    enabled: true
    skip_push: false
    prune: false

target_groups:
  - working_directory: environments/dev
    target: dev
    aws_region: ap-northeast-1
    s3_bucket_name_tfmigrate_history: 'dev-fumis-pf-terraform-tfstate-s3-bucket'
    template_dir: environments/dev
    terraform_command: terragrunt # devのみterragruntを使用
    terraform_plan_config: {} # Roleはパブリックにしたくないため、configure-aws-credentialsのactionsを使う
    terraform_apply_config: {}
    tfmigrate_plan_config: {}
    tfmigrate_apply_config: {}

  - working_directory: environments/prd
    target: prd
    aws_region: ap-northeast-1
    s3_bucket_name_tfmigrate_history: 'prd-fumis-pf-terraform-tfstate-s3-bucket'
    template_dir: environments/prd
    terraform_plan_config: {} # Roleはパブリックにしたくないため、configure-aws-credentialsのactionsを使う
    terraform_apply_config: {}
    tfmigrate_plan_config: {}
    tfmigrate_apply_config: {}
    # terraform_plan_config:
    #   aws_assume_role_arn: arn:aws:iam::000000000000:role/GitHubActions_Terraform_github_terraform_plan
    # terraform_apply_config:
    #   aws_assume_role_arn: arn:aws:iam::000000000000:role/GitHubActions_Terraform_github_terraform_apply
    # tfmigrate_plan_config:
    #   aws_assume_role_arn: arn:aws:iam::000000000000:role/GitHubActions_Terraform_github_tfmigrate_plan
    # tfmigrate_apply_config:
    #   aws_assume_role_arn: arn:aws:iam::000000000000:role/GitHubActions_Terraform_github_tfmigrate_apply
